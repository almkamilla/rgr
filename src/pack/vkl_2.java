package pack;/*Пакет (package) — это некий контейнер, который используется для того, чтобы изолировать имена классов. 
pack - название пакета */

import javax.swing.*; // библиотека для графического интерфейса
import javax.swing.border.*;//библиотека необходимая для того, чтобы установить отступы 
import java.awt.event.*; /*Подключаем объект event, который содержит свойства, описывающие некое событие.
Каждый раз, когда происходит какое-либо событие, 
объект Event передается соответствующей программе обработки.
Используемым событием в нашей программе являются ACTION события.
*/
import java.awt.*; /*	java. - Все стандартные классы, поставляемые с системой Java, хранятся в пакете java.
java.awt  - подключение пакета awt, содержащего базовые графические функции:GridLayout, BorderLayout и т.д.
"*"-включение всех элементов библиотеки awt */	


public class vkl_2 extends JPanel  {
	/*Класс Vkl_2, который доступен для любого файла из пакета pack наследует 
	функции элемента JPanel */


	
	private JPanel Panel_text_1, Panel_text_2, Panel_button;//панели на которых располагаются поля и кнопки. Панели доступны только для данного класса (private)
	private JButton del, calc;// кнопки Рассчитать и очистить которые доступны только для данного класса
	public static JLabel label_1,label_2,label_3,label_4,label_5,label_6,label_7,label_8,label_9,label_10,
	label_11,label_12,label_13,label_14,label_15,label_16,label_17,label_18,label_19,label_20,
	label_n,label_n_1,label_n_2,label_vot, label_hv, label_g, label_gv, label_ot, label_el,label_itogo;
	// Панели на которых располагается текст
	
	public static JTextField s, kol, vot_rash, vot_t, hv_rash, hv_t, g_rash, g_t, gv_rash, gv_t,
	ot_t, el_rash, el_t;
	/* текстовые поля в которые пользователь вводит данные, доступны для любого файла из пакета pack */
	/*static позволяет определять статические методы. Это такие методы, которые являются общими для класса, а не для
отдельного объекта этого класса. Также они могут работать лишь со статическими полями класса.К статическим методам 
и переменным можно обращаться через имя класса.*/
	private JCheckBox vot_s, vot_norm, hv_s, hv_norm, g_s, g_norm, gv_s, gv_norm, ot_norm, el_s, el_norm;// компонент флажок
	public static int int_vot_s=0, int_vot_norm=0, int_hv_s=0, int_hv_norm=0, int_g_s=0, int_g_norm=0, 
			int_gv_s=0, int_gv_norm=0, int_ot_norm=0, int_el_s=0, int_el_norm=0;
	private int int_vot=1, int_hv=1, int_g=1,int_gv=1,int_el=1;
	//переменная типа integer, доступная любому классу
/*static позволяет определять статические методы. Это такие методы, которые являются общими для класса, а не для
отдельного объекта этого класса. Также они могут работать лишь со статическими полями класса.К статическим методам 
и переменным можно обращаться через имя класса.*/


	
	
	public vkl_2() { /*Модификатор доступа public означает, что метод Index()виден и доступен любому классу.
		static означает, что не нужно создавать экземпляр(копию) объекта Index в памяти, чтобы использовать этот метод.
		Vkl_2 - панель, на ней будут все компоненты которые будут отображаться на 2 вкладке .*/
        
        setLayout (new BorderLayout()); /*	Оператор new создает экземпляр указанного класса
	  	Метод setLayout - Вызов менеджера компоновки, который задает определенный порядок панелей в контейнере.
 		Менеджер размещения BorderLayout - тип разбивки контейнера, при котором всё пространство контейнера разбивается 
 		на пять частей. В каждой из этих частей располагается один компонент. 
 		При добавлении компонента на контейнер с BorderLayout разработчик обязательно указывает, 
 		куда именно он хочет поместить компонент.*/

        Panel_text_1 = new JPanel();//Панель на которой  располагаются текстовые поля и поля для ввода текста
        Panel_text_2 = new JPanel(); //Панель на которой располагаются текстовые поля и поля для ввода текста
        Panel_button = new JPanel();//Панель на которой располагается кнопка

		add(Panel_text_1, BorderLayout.NORTH);//Добавление панели Panel_text_1 наверх
		add(Panel_text_2, BorderLayout.CENTER);//Добавление панели Panel_text_2 по центру
		add(Panel_button, BorderLayout.SOUTH);//Добавление панели Panel_button снизу

		Panel_text_1.setBorder(new EmptyBorder(10,10,10,10));
		/*установка внутренних отступов(сверху,слева,снизу,справа) */
		Panel_text_2.setBorder(new EmptyBorder(0,10,35,10));//установка внутренних отступов

		/* установка менеджера компоновки GridLayout. данный менеджер компоновки располагает компоненты в таблицу */
		Panel_text_1.setLayout(new GridLayout(2,2,0,5));//на панели 2 строки,2столбцa 
		Panel_text_2.setLayout(new GridLayout(13,4,25,5));/* на панеле будет 13 строк, 4 столбца, расстояние между
		 столбцами 25, расстояние между строками 5 */
		Panel_button.setLayout(new GridLayout(1,2));//на панели 1 строка,2столбцa, будeт расположенs кнопка
